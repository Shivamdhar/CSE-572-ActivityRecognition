function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 16-Feb-2019 01:59:55.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 30xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-21.2535658520096;-1.82353261208855;-1.82655520416422;-1.48453679242841;-1.26969660361236;-1.39397401141899;-0.971842301571384;-0.793396017549367;-0.778923328120851;-0.651996442458517;-0.5363950258489;-0.472331649871474;-0.470970523141692;-0.352026860248291;-0.353302340117607;-0.333042576317696;-0.321514496290832;-0.282368260523937;-0.227118776994785;-0.248766161419191;-0.216811955638671;-0.221672421133169;-0.214994201945889;-0.168666874799852;-0.18782357185007;-0.145273718002056;-0.189106081150111;-0.140760182033983;-0.122446984543677;-0.116853869506685];
x1_step1.gain = [0.0465050404658556;0.480996372520876;0.481367294767048;0.569772207557542;0.639792277652163;0.536766526172277;0.819415547646133;0.844891924444338;0.943142747888849;1.25994719094187;1.50325997969962;1.68778405536886;2.00899762327273;2.30757323522368;2.43617198490952;2.79672179019283;2.76248127307648;3.15837943008694;3.78216756148984;3.39049924062708;4.10881194063892;4.09346834978041;4.36876582215762;5.33233827347911;5.21005917827555;5.06173710316481;4.91977022595031;5.43971523228522;6.76407957091225;7.20067103562642];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.4028974257401582992;-1.2573428998159854597;0.52973462905276946788;0.31510103657616955752;-0.21259511076586293243;-0.12728983275047928148;0.49249647727013001752;-1.0003552283416916602;1.1763794329153074436;-1.8900845756311843715];
IW1_1 = [-0.41714678229849078139 -0.4299487197519580306 -0.38924369760355292946 0.1569198396690908992 -0.41724789194298195216 -0.4254345794121121016 0.14130153139320497657 -0.16132867512693502277 0.34118815320871831442 0.1664920901530500541 -0.095600168137865731977 0.2476561047779704261 0.36685127547238494117 -0.41247301051725637766 -0.32751359793935774789 -0.20757129097672954998 -0.32482026918832540563 -0.14018185005854519321 0.22325251855715810834 0.093226673722513392351 0.18549757670641972562 0.24486806497634441837 0.25800692456026286248 0.34190003130828605649 0.3394216002432370316 0.10503586990663800471 -0.03205427846944326753 -0.27827586600177117715 0.07957466219082506842 -0.38259389884730743425;0.18474658435938765 0.35359499058300020158 0.42932863052673753135 0.048436999450190747207 0.37356661372991001313 -0.087248431023824637998 -0.38705580896315272543 0.018888666931978020935 -0.054611338657937255614 0.0076467652270752689905 -0.12579614896756000086 0.13557363793761820214 -0.2969028348763458891 -0.033592457659785718294 0.00057164495650335205891 -0.0079948388748172366514 0.40830048499541304885 -0.26968764428821884183 0.41559492470559167288 -0.26526768905566056045 -0.093937806358198636114 0.13024940704593129803 -0.055499022378371218323 -0.45223393170341408265 0.45216207051401396955 -0.22383945990588660635 0.17492178384903905863 -0.33336585123933493158 0.26538068596664826648 0.42527053632135808359;-0.023966542466203964723 -0.72610149537069246239 -0.67762493103200494016 -0.11625216445912180119 -0.28946029859781086113 -0.30536291977071167159 0.50507890463021176686 -0.17025799582541967236 -0.20954272196170203868 0.33354205113273532879 0.10976073606005531946 0.30137867765940984377 0.47652159193213911026 -0.25923101972482259781 0.44968514471999876392 -0.28648125954317588127 0.10988390798029361306 -0.3883673052918449331 -0.12462704132912202915 -0.26902907550180293894 0.1656189023528455706 0.35431936754705450898 0.13223171008283524097 0.03846302801978417063 0.31603990080259269924 0.25457771175927035312 0.39117621778141620226 -0.2540051785394175643 0.42338424715087441541 0.26585113368852908433;-0.219496020106035028 1.1090884461509149528 0.4240798801837437626 -0.20471421646312359943 0.43617677109193475626 0.22008224877615958914 -0.19096397393633365858 -0.12616858249334805819 0.031994448744709358401 0.12380443467435663096 0.34234889210785507396 0.15246419729865406945 0.41995772161001626577 -0.33763242481366767533 -0.075273645272409220319 0.059717928336661688093 0.25419718706460830981 -0.26679884286834792961 -0.001222336403102439531 -0.35182469621094397683 -0.27482780996289229991 0.11259236641910944088 0.24039889147844545336 -0.17894125261482649036 0.16213195182622144874 -0.055798878626875200726 -0.33674209955384909465 -0.26979862459956688303 -0.066425666524446314032 0.26037816707102839908;0.14204656984353186688 -2.1935695762440228229 -1.1116175849431855216 0.17063078519667940203 0.1580326990511014551 0.35517276553622462165 -0.081866708296175538795 -0.21835615083925005719 0.31796837856342674566 -0.036125527640976637378 0.30964577656506059311 -0.093988582690872887748 -0.34809560839039138669 -0.2041395867754979554 -0.085207527603131910654 0.2403586301324837915 0.10883907283408997269 0.087875696524635560358 -0.067322092364733895908 -0.0031240146899940840486 -0.32168307870371787294 0.038229271705578070362 -0.058176899716428066844 -0.4178186949024768615 -0.011621375390467446331 0.11375361687313098602 -0.19159538934342754124 0.031026108486035840206 -0.34855675463701452088 0.099566468964282839327;-0.014833240386053755944 0.71085689737429613722 0.084549794324382837596 0.42716878196845514681 -0.23963483173632069145 0.40918397656106875182 0.10963900869401550786 0.026914850182630858932 -0.17714832505029409759 0.32099190170846630954 0.242785646507716113 0.40215514027833321187 -0.43839233967256385771 0.36632785108562332388 0.40069477415641219231 0.1051628718073761154 0.019515837610741430808 -0.10020405278153447781 -0.15443603402557143367 0.27016291762990357617 -0.35258852364487786035 -0.38815357804937278274 -0.38406194527869413902 -0.086653036683931483619 -0.25198762521540224446 0.35778305474825500276 0.1796508736778469062 -0.18829331567738488706 -0.35351696275291349947 -0.12294959756656449745;0.21031343393851903434 -0.1740905169924987228 0.26903585239733596168 -0.2164296693747445044 0.3840849228685596084 0.056499253899194329387 0.41500255471226982218 -0.044848271084030603972 0.28940220164937130454 0.078347261693472378119 0.25017013802999843453 0.12145066042949642648 -0.40938353222178003321 0.36368167549787644433 0.25334673574242544403 -0.37026272262842030436 0.27266562010938694138 0.14369984534590696246 0.3411079036366989059 0.31192295617170129329 0.16253000379481666315 0.34892328268819139403 -0.16933268888955227416 -0.36379837803160508525 -0.42728612293996803828 -0.081224959570812521603 0.017637792744540248258 0.41629997511574479141 0.15678655878245428834 -0.3286690936557853937;-0.25971716482164591833 0.70092884742347616456 -0.068123030431990638789 0.04613852064055105201 -0.014274907608523439845 -0.34834532023317699156 0.33405628233269174521 0.10284214095234121833 -0.24002353732292938671 0.47708541973075258014 0.1525812786786352182 0.011294991158270898876 -0.137960666774720353 -0.38083442765674208053 -0.16963715636679041476 -0.39774542404318108391 0.00079589636172836637426 0.52696537241425367437 -0.094026078447740982225 0.051150572262413429581 -0.28756830159805446545 0.23128818975242210199 0.32365287726721131412 -0.13573566446699336652 0.41083930001227020323 -0.13573160756971960894 0.27272078611810801618 0.14831657890139213207 0.055154408239073714204 -0.39973699941346590991;0.408654161323371512 0.5075740384075564382 0.30990429390332208115 0.27118809883906475067 -0.3819351588209589643 -0.20137321273410421774 0.15028933392958870874 0.044160011468471579987 0.059239802735469485051 0.42572323796283134678 -0.357831866037268298 0.34397205823520715651 0.33578898515652505496 -0.35380358915208798276 -0.017452426453136861417 0.3095290326519269386 -0.20173763768723587675 -0.001863672148611539986 0.015595590373659103112 -0.29627113255908515965 -0.093658420044951035122 -0.24086989896695679136 0.031322757632174180742 0.043256823105658037676 0.32912113659691893952 -0.24373499614507562749 0.40472462466974101769 0.27986291238178556684 -0.41866939963632826549 0.12820869054738959214;-0.049503897984470641991 -0.21979305029063794796 0.1255832055207767306 -0.090123368617922527957 -0.26679600516923079878 -0.30440886525777943739 0.18338374333378135161 -0.24211682968065553756 -0.20424735169752017416 0.42775185273257654295 0.25970720757700527237 -0.084864487462433177423 0.37991391968205412422 0.27503712787134826367 0.32111237365939737654 -0.077248415003469003692 0.34659006626766158954 -0.02258769803010637206 -0.10623826959136120629 -0.21951984124132153942 -0.4136640782691216045 0.027078828642700336626 0.40972183583855142919 -0.07055401906868649653 -0.13615254373538315802 -0.028194765661977400084 -0.3532614882935340983 0.27519246050055778952 -0.11779011525780924696 -0.055426619706412161293];

% Layer 2
b2 = [0.58515712164426625375;0.54245420622678464095];
LW2_1 = [0.44933119750120625868 0.91391078670890324442 -0.15901328461012492754 0.80554957345377564693 -1.6539559543321693535 -0.45343976943244440614 -0.2635765048133569266 0.0014072803481661802505 0.79774516428832387138 -0.26663842664474191047;0.65449663145491621119 0.71559573386512109749 0.86294420086854040086 -0.62658776860192000324 1.0408200985325681831 -1.5284127567420056071 -0.55433002719378254852 -0.4995795063224248711 -0.22077385731744531006 0.93391054337363677007];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
